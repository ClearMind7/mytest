/*

    关于java语言当中的方法：
	   1、方法怎么定义，语法结构：

	      [修饰符列表] 返回值类型 方法名（形式参数列表）{
                   方法体;
				   return
			  }
       
	   2、对以上的语法结构进行解释说明：
	      
		  2.1、关于修饰符列表
		     *可选项 不是必须的
			 *目前统一写成public static
			 *方法的修饰符列表当中有“static关键字”的话，怎么调用这个方法？
			     -类名.方法名(实际参数列表);
		  
		  2.2、返回值类型
		    * 什么是返回值？
               - 一个方法是可以完成某个特定功能的。这个功能结束之后大多数都是需要
			   返回最终执行结果，执行结果可能是一个具体存在的数据，只要是数据一定
			   会有类型。

			*返回值类型？
			   返回值是一个具体存在的数据，数据都是有类型的，此处需要指定的是返回值的
			   具体类型。
			 
			*返回值类型都可以指定哪些类型呢》
			    java任意一种类型都可以，包括基本数据类型和所有的引用数据类型。

		    *也可能这个方法执行结束之后不返回任何数据，java中规定，当一个方法执行结束之后不返回任何
			数据的话，返回值类型位置必须编写：void关键字。

			*返回值类型可以是：
			  byte,short,int,long,float,double,boolean,char,string,void.......
			 
			 *返回值类型若不是void，表示这个方法实行结束之后必须返回一个具体的数值，
			 当方法执行结束的时候没有返回任何数据的话，编译器报错。怎么返回值呢，代码怎么写呢?
			 "return 数值;",并且要求返回的"值"的数据类型必须和"返回值"的数据类型一样，不然编译器报错。

			 *返回值类型是void的时候，方法体当中不能编写"return 值;"这样的语句。但是要注意，可以
			 编写"return;"这样的语句

			 *只要带有return关键字的语句执行，return语句所在的方法结束。【不是jvm，是return所在的方法结束】

          2.3、方法名：
		     * 只要是合法的标识符就行
			 * 方法名最好见名知意
			 * 方法名最好是动词
			 * 方法名首字母要求小写，后面每个单词首字母大写
		  
		  2.4、形式参数列表：简称形参
		    * 形参是局部变量
			* 形参的个数可以是：0-n个
			* 多个形参之间可以用逗号隔开
			* 形参中起决定性作用的是形参的数据类型，形参的名字就是局部变量的名字。
			* 方法在调用的时候，实际给这个方法传递的真实数据被称为：实际参数，简称实参。
			* 实参列表和形参列表必须满足：
			  - 数量相同
			  - 类型对应相同

			例如：
			  public static int su,(int a,int b合法的标识符就行){//int a int b是形参列表
			  }
			  sum("abc","def");编译器报错
			  sum(10,20);// 10,20是实参列表

		  2.5、 方法体必须由大括号括起来，方法体当中的代码有顺序，遵循自上而下的顺序依次执行。
		  并且方法体由java语句构成，每一个java语句都已;结尾。

          3、方法怎么调用？
		   方法只定义不去调用时无法执行的。只有在调用的时候才会执行。
		   语法规则：方法的修饰符列表当中有static
		     类名.方法名（实参列表）;这是一条java语句，表示调用某个类的某个方法，传递这样的实参。
*/

//public表示公开的
//class表示定义类
//methodTest03是一个类名
public class MethodTest03//表示定义一个公开的类，起名是MethodTest03，由于是公开的类，所以源文件名必须：MethodTest03
{
	//类体
	//类体重不能直接编写java语句，除非声明变量之外
	//方法出现在类体当中

	//以下就是个方法
	//public表示公开的
	//static表示静态的
	//void表示方法执行结束之后不返回任何数据
	//（String[]args）：形式参数列表，表示string[]是一种数据引用数据类型，args是一个局部变量的变量名。
	//所以以下只有args这个局部变量的变量名是随意的
	//主方法就需要这样固定编写，这是程序的入口。【这是sun公司规定的，必须这样写才行。】
	public static void main(String[]args){
	    
		//这里的程序是一定会执行的。
		//main方法是jvm负责调用的，适应入口位置。
		//从这里作为起点开始执行程序。
		//既然是这样 我们就可以在这里编写java语句来调用其他的方法。
		//调用MethodTest03的sum方法，传递两个实参
		//注意 方法体当中的代码是顺序的，遵循自上而下的顺序依次执行
		//前边的程序执行不结束，无法执行后边的
	        
			MethodTest03.sum(1,1);//10,20是实参列表【实际上执行到这里main方法暂停了，进入sum方法执行，sum方法执行结束之后表示main方法的下一个代码】
	     
		 //一个方法可以被重复使用，重复调用。
		 int i = 100;
		    MethodTest03.sum(i,128);
			//再次调用方法

		int k = 90;
		int f = 10;
		 MethodTest03.sum(k,f);
	}
  //自定义方法，不是程序的入口
  //方法作用 计算两个int类型数据的和，不要求返回结果，但是要求将结果直接输出到控制台上。
  //修饰符列表：public static
  //返回值类型：void
  //方法名：sum
  //形式参数列表：int a,int b
  //方法体：主要的任务是求和之后输出计算结果
  public static void sum(int a,int b){//int a int b是形参列表

  int c = a + b;
  System.out.println(a+ "+" + b +"=" + c);
  
  }

}