/*

     关于方法的递归调用
	    1、什么是递归？
		   方法自身调用自身
		   a(){
		     a();
		   }
		

		2、递归是很耗费栈内存的，递归算法可以不用的时候尽量别用。

		3、以下程序运行的时候发生了这样一个错误【不是异常，是错误Error】：
		      java.lang.StackOverflowError
			  栈内存溢出错误
			  错误发生无法挽回，只有一个结果 jvm停止工作

		4、递归必须有结束条件，没有结束条件一定会发生栈内存溢出错误。

		5、递归即使有了结束条件，即使结束条件是正确的，也有可能发生栈内存溢出错误。
		因为递归的太深了。

		 注意：递归可以不使用尽量别用。
		       但是有些情况该功能的实现必须依靠这种方法。
  
*/

publi class RecursionTest01
{
  public static void main(String[] args){

       dosome();
      
  
  }

  //以下的代码片段虽然只有一份
  //但是可以被重复的调用，并且只要调用dosome方法就会在栈内存中新分配一块所属的内存空间。
  public static vod dosome(){
      u.p("dosome begin");
	  dosome();//这行代码不结束 下一行代码是不能执行的
	  u.p("dosome over");
  
  
  
  }

}